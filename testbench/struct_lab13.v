/* Generated by Yosys 0.8 (git sha1 UNKNOWN, clang 3.8.1-24 -O3 -DNDEBUG -fPIC) */

module top(\pb[4] , \pb[6] , \pb[16] , \pb[15] , \pb[14] , \pb[13] , \pb[12] , \pb[11] , \pb[10] , \pb[9] , \pb[5] , \pb[8] , \pb[7] , \pb[3] , \pb[1] , \pb[2] , \ss2[4] , hz100, \ss6[5] , \ss7[6] , \ss5[1] , \ss2[7] , \ss5[3] , \ss1[7] , \ss7[3] , \ss2[5] , \ss1[0] , \ss3[1] , \ss0[1] , \ss6[6] , \ss5[5] , \ss5[7] , \ss6[0] , \ss6[1] , \ss7[4] , \ss6[2] , \ss2[3] , \ss2[2] , \pb[0] , \ss5[6] , \ss2[1] , \ss6[3] , \ss4[1] , \ss4[4] , \ss0[2] , \ss6[7] , \ss6[4] , \ss5[0] , \ss0[0] , \ss4[3] , \ss7[1] , \ss5[2] , \ss4[2] , \ss2[6] , \ss0[4] , \ss1[2] , \ss3[5] , \ss4[5] , \ss3[6] , \ss4[7] , \ss0[3] , \ss4[6] , \ss1[5] , \left[2] , \left[1] , \left[0] , \ss0[7] , \right[0] , \ss0[6] , \ss0[5] , \left[7] , \pb[20] , \left[6] , \ss3[4] , \left[5] , \ss7[0] , \left[4] , \pb[17] , \left[3] , \pb[19] , \ss3[7] , green, red, \right[7] , \right[6] , \right[5] , \right[4] , \right[3] , \right[2] , blue, \right[1] , \ss5[4] , \ss3[0] , \ss4[0] , \ss2[0] , \ss1[4] , \ss7[2] , \ss7[7] , \ss1[3] , \ss1[1] , \ss1[6] , \ss3[3] , \ss7[5] , \ss3[2] , \pb[18] );
  wire _0_;
  wire _1_;
  wire _2_;
  wire _3_;
  output blue;
  wire divide;
  output green;
  input hz100;
  output \left[0] ;
  output \left[1] ;
  output \left[2] ;
  output \left[3] ;
  output \left[4] ;
  output \left[5] ;
  output \left[6] ;
  output \left[7] ;
  input \pb[0] ;
  input \pb[10] ;
  input \pb[11] ;
  input \pb[12] ;
  input \pb[13] ;
  input \pb[14] ;
  input \pb[15] ;
  input \pb[16] ;
  input \pb[17] ;
  input \pb[18] ;
  input \pb[19] ;
  input \pb[1] ;
  input \pb[20] ;
  input \pb[2] ;
  input \pb[3] ;
  input \pb[4] ;
  input \pb[5] ;
  input \pb[6] ;
  input \pb[7] ;
  input \pb[8] ;
  input \pb[9] ;
  output red;
  output \right[0] ;
  output \right[1] ;
  output \right[2] ;
  output \right[3] ;
  output \right[4] ;
  output \right[5] ;
  output \right[6] ;
  output \right[7] ;
  output \ss0[0] ;
  output \ss0[1] ;
  output \ss0[2] ;
  output \ss0[3] ;
  output \ss0[4] ;
  output \ss0[5] ;
  output \ss0[6] ;
  output \ss0[7] ;
  output \ss1[0] ;
  output \ss1[1] ;
  output \ss1[2] ;
  output \ss1[3] ;
  output \ss1[4] ;
  output \ss1[5] ;
  output \ss1[6] ;
  output \ss1[7] ;
  output \ss2[0] ;
  output \ss2[1] ;
  output \ss2[2] ;
  output \ss2[3] ;
  output \ss2[4] ;
  output \ss2[5] ;
  output \ss2[6] ;
  output \ss2[7] ;
  output \ss3[0] ;
  output \ss3[1] ;
  output \ss3[2] ;
  output \ss3[3] ;
  output \ss3[4] ;
  output \ss3[5] ;
  output \ss3[6] ;
  output \ss3[7] ;
  output \ss4[0] ;
  output \ss4[1] ;
  output \ss4[2] ;
  output \ss4[3] ;
  output \ss4[4] ;
  output \ss4[5] ;
  output \ss4[6] ;
  output \ss4[7] ;
  output \ss5[0] ;
  output \ss5[1] ;
  output \ss5[2] ;
  output \ss5[3] ;
  output \ss5[4] ;
  output \ss5[5] ;
  output \ss5[6] ;
  output \ss5[7] ;
  output \ss6[0] ;
  output \ss6[1] ;
  output \ss6[2] ;
  output \ss6[3] ;
  output \ss6[4] ;
  output \ss6[5] ;
  output \ss6[6] ;
  output \ss6[7] ;
  output \ss7[0] ;
  output \ss7[1] ;
  output \ss7[2] ;
  output \ss7[3] ;
  output \ss7[4] ;
  output \ss7[5] ;
  output \ss7[6] ;
  output \ss7[7] ;
  (* src = "/home/menon18/yosys-yosys-0.8/share/ice40/cells_map.v:40" *)
  SB_LUT4 #(
    .LUT_INIT(2'h1)
  ) _4_ (
    .I0(divide),
    .I1(_1_),
    .I2(_1_),
    .I3(_1_),
    .O(_0_)
  );
  (* src = "lab13.v:19|/home/menon18/yosys-yosys-0.8/share/ice40/cells_map.v:17" *)
  SB_DFFR _5_ (
    .C(hz100),
    .D(_0_),
    .Q(divide),
    .R(\pb[19] )
  );
  assign _1_ = 1'h0;
  assign _2_ = 1'h1;
  assign _3_ = 1'hx;
  assign \ss7[7]  = _3_;
  assign \ss7[6]  = _3_;
  assign \ss7[5]  = _3_;
  assign \ss7[4]  = _3_;
  assign \ss7[3]  = _3_;
  assign \ss7[2]  = _3_;
  assign \ss7[1]  = _3_;
  assign \ss7[0]  = _3_;
  assign \ss6[7]  = _3_;
  assign \ss6[6]  = _3_;
  assign \ss6[5]  = _3_;
  assign \ss6[4]  = _3_;
  assign \ss6[3]  = _3_;
  assign \ss6[2]  = _3_;
  assign \ss6[1]  = _3_;
  assign \ss6[0]  = _3_;
  assign \ss5[7]  = _3_;
  assign \ss5[6]  = _3_;
  assign \ss5[5]  = _3_;
  assign \ss5[4]  = _3_;
  assign \ss5[3]  = _3_;
  assign \ss5[2]  = _3_;
  assign \ss5[1]  = _3_;
  assign \ss5[0]  = _3_;
  assign \ss4[7]  = _3_;
  assign \ss4[6]  = _3_;
  assign \ss4[5]  = _3_;
  assign \ss4[4]  = _3_;
  assign \ss4[3]  = _3_;
  assign \ss4[2]  = _3_;
  assign \ss4[1]  = _3_;
  assign \ss4[0]  = _3_;
  assign \ss3[7]  = _3_;
  assign \ss3[6]  = _3_;
  assign \ss3[5]  = _3_;
  assign \ss3[4]  = _3_;
  assign \ss3[3]  = _3_;
  assign \ss3[2]  = _3_;
  assign \ss3[1]  = _3_;
  assign \ss3[0]  = _3_;
  assign \ss2[7]  = _3_;
  assign \ss2[6]  = _3_;
  assign \ss2[5]  = _3_;
  assign \ss2[4]  = _3_;
  assign \ss2[3]  = _3_;
  assign \ss2[2]  = _3_;
  assign \ss2[1]  = _3_;
  assign \ss2[0]  = _3_;
  assign \ss1[7]  = _3_;
  assign \ss1[6]  = _3_;
  assign \ss1[5]  = _3_;
  assign \ss1[4]  = _3_;
  assign \ss1[3]  = _3_;
  assign \ss1[2]  = _3_;
  assign \ss1[1]  = _3_;
  assign \ss1[0]  = _3_;
  assign \ss0[7]  = _3_;
  assign \ss0[6]  = _3_;
  assign \ss0[5]  = _3_;
  assign \ss0[4]  = _3_;
  assign \ss0[3]  = _3_;
  assign \ss0[2]  = _3_;
  assign \ss0[1]  = _3_;
  assign \ss0[0]  = _3_;
  assign \right[7]  = _1_;
  assign \right[6]  = _1_;
  assign \right[5]  = _1_;
  assign \right[4]  = _1_;
  assign \right[3]  = _1_;
  assign \right[2]  = _1_;
  assign \right[1]  = _1_;
  assign \right[0]  = divide;
  assign red = _3_;
  assign \left[7]  = _3_;
  assign \left[6]  = _3_;
  assign \left[5]  = _3_;
  assign \left[4]  = _3_;
  assign \left[3]  = _3_;
  assign \left[2]  = _3_;
  assign \left[1]  = _3_;
  assign \left[0]  = _3_;
  assign green = _3_;
  assign blue = _3_;
endmodule
